CONTAINER -> (TABLE | ENUM | REF) (CONTAINER | EPSILON)
TABLE -> 'Table' NAME LCURLY TABLE_CONTENT RPAREN
ENUM -> 'Enum' ENUM_TYPE LCURLY ENUM_CONTENT RPAREN
NAME -> (UPPER | LOWER | DIGIT) (EPSILON | NAME)
TABLE_CONTENT -> TABLE_ROW (TABLE_CONTENT)
TABLE_ROW -> NAME (TYPE (PK) | ENUM_TYPE)
ENUM_TYPE -> NAME
ENUM_CONTENT -> ENUM_ROW (ENUM_CONTENT)
ENUM_ROW -> NAME (LBRACKET 'note:' QUOTE RBRACKET)
LCURLY -> '{'
RCURLY -> '}'
LBRACKET -> '['
RBRACKET -> ']'
QUOTE -> ''' NAME (QUOTE) '''
REF -> NAME '.' (NAME | REF) (EPSILON)
UPPER -> A-Z
LOWER -> a-z
DIGIT -> 0-9
-------------------------------------------------------
Correct First and Follow grammar: http://hackingoff.com/compilers/predict-first-follow-set

CONTAINERS -> CONTAINER | CONTAINER CONTAINERS
CONTAINER -> TABLE | ENUM | REF | EPSILON
TABLE -> Table NAME { TABLE_CONTENT }
TABLE_CONTENT -> TABLE_ROW | TABLE_ROW TABLE_CONTENT | EPSILON
TABLE_ROW -> NAME TYPE | NAME TYPE pk | NAME ENUM_TYPE
ENUM -> Enum ENUM_TYPE { ENUM_CONTENT }
ENUM_CONTENT -> ENUM_ROW | ENUM_ROW ENUM_CONTENT
ENUM_ROW -> NAME [ note: NAME ]
REF -> ref

NAME -> LETTER | LETTER ALPHANUMERIC
ALPHANUMERIC -> LETTER | DIGIT | LETTER ALPHANUMERIC | DIGIT ALPHANUMERIC
DIGIT -> 0
LETTER -> UPPER | LOWER
UPPER -> A
LOWER -> a
TYPE -> int | varchar
ENUM_TYPE -> NAME